user    root;
worker_processes  4;

events {
  worker_connections  4096;
}

http {
  include       mime.types;
  # include    /etc/nginx/proxy.conf;
  # include    /etc/nginx/fastcgi.conf;
  index      index.html;

#   server {
#     listen       80;
#     return       301 "https://$host$request_uri";
#   }

#   server {
#     listen  80;
#     root    /var/www/transcendence;

#     # ssl_certificate /etc/nginx/ssl/certificate.crt;
#     # ssl_certificate_key /etc/nginx/ssl/private.key;
#     # ssl_protocols TLSv1.2 TLSv1.3;

#     location / {
#         try_files $uri $uri/ /index.html;
#     }
#   }

    server {
    listen 8000;
    server_name 127.0.0.1;

    index   index.html;
    root    /var/www;

    #ssl_certificate ssl/ft_trance.1337.fr.crt;
    #ssl_certificate_key ssl/ft_trance.1337.fr.key;

    location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            try_files $uri $uri/ $uri.html /index.html;
    }

    #location ~* \.(?:css|js|jpg|svg)$ {
    #    expires 30d;
    #    add_header Cache-Control "public";
    #}
    # location ~* \.(?:css|js|jpg|svg)$ {
    #     expires -1;
    #     add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    #     add_header Pragma "no-cache";
    # }

    location ~* \.(?:json)$ {
        expires 1d;
        add_header Cache-Control "public";
    }


    # Proxy pass to backend API
    # location /api/ {
    #     proxy_pass http://auth:8000;
    #     proxy_pass_header Set-Cookie; # Preserve cookies
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # location /api/chat/ {
    #     proxy_pass http://chat:8000;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_pass_header Set-Cookie; # Preserve cookies
    #     proxy_set_header Cookie $http_cookie; # Forward incoming cookies
    # }
}


}

